!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/media/terabyte/development/math_visualiser_revised/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
%.o	Makefile	/^%.o: %.c$/;"	t
.PHONY	Makefile	/^.PHONY = all clean$/;"	m
0	.vscode/launch.json	/^        {$/;"	o	array:configurations
0	.vscode/tasks.json	/^                "$gcc"$/;"	s	array:tasks.0.problemMatcher
0	.vscode/tasks.json	/^        {$/;"	o	array:tasks
1	.vscode/launch.json	/^        {$/;"	o	array:configurations
2	.vscode/launch.json	/^        {$/;"	o	array:configurations
3	.vscode/launch.json	/^        {$/;"	o	array:configurations
4	.vscode/launch.json	/^        {$/;"	o	array:configurations
5	.vscode/launch.json	/^        {$/;"	o	array:configurations
AABB	src/util/aabb.h	/^typedef vec3s AABB[2];$/;"	t	typeref:typename:vec3s[2]
AABB_H	src/util/aabb.h	/^#define AABB_H$/;"	d
ASSERT	src/util/defines.h	/^#define ASSERT(/;"	d
BEZIER_DATA_FILEPATH	src/graphs/bezier.c	/^#define BEZIER_DATA_FILEPATH /;"	d	file:
BEZIER_GRAPH_H	src/graphs/bezier.h	/^#define BEZIER_GRAPH_H$/;"	d
BIN	Makefile	/^BIN  = bin$/;"	m
Bezier	src/graphs/bezier.h	/^struct Bezier {$/;"	s
BezierGraph	src/graphs/bezier.h	/^struct BezierGraph {$/;"	s
Button	src/gfx/window.h	/^struct Button {$/;"	s
CAMERA_H	src/util/camera.h	/^#define CAMERA_H$/;"	d
CAMERA_STACK_MAX	src/gfx/renderer.h	/^#define CAMERA_STACK_MAX /;"	d
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -std=c11 -O3 -Wall -Wextra -Wno-pedantic -Wstrict-aliasing -Wno-visibility -Wno-unused-/;"	m
COLOR_H	src/util/color.h	/^#define COLOR_H$/;"	d
CUBIC_DATA_FILEPATH	src/graphs/cubic.c	/^#define CUBIC_DATA_FILEPATH /;"	d	file:
CUBIC_H	src/graphs/cubic.h	/^#define CUBIC_H$/;"	d
CameraType	src/util/camera.h	/^enum CameraType$/;"	g
CameraType_LAST	src/util/camera.h	/^#define CameraType_LAST /;"	d
CameraType_ortho	src/util/camera.h	/^    CameraType_perspective, CameraType_ortho,$/;"	e	enum:CameraType
CameraType_perspective	src/util/camera.h	/^    CameraType_perspective, CameraType_ortho,$/;"	e	enum:CameraType
Character	src/gfx/renderer.h	/^struct Character {$/;"	s
Cubic	src/graphs/cubic.h	/^struct Cubic {$/;"	s
CubicGraph	src/graphs/cubic.h	/^struct CubicGraph {$/;"	s
DEFINES_H	src/util/defines.h	/^#define DEFINES_H$/;"	d
F32_EPSILON	src/util/fmath.h	/^#define F32_EPSILON /;"	d
F64_EPSILON	src/util/fmath.h	/^#define F64_EPSILON /;"	d
FALSE	src/util/defines.h	/^#define FALSE /;"	d
FILESYSTEM_LINUX_H	src/io/filesystem.h	/^#define FILESYSTEM_LINUX_H$/;"	d
FMATH_H	src/util/fmath.h	/^#define FMATH_H$/;"	d
FWindow	src/gfx/window.h	/^typedef void (*FWindow)();$/;"	t	typeref:typename:void (*)()
FillMode	src/gfx/renderer.h	/^enum FillMode {$/;"	g
FillMode_fill	src/gfx/renderer.h	/^    FillMode_fill, FillMode_line,$/;"	e	enum:FillMode
FillMode_line	src/gfx/renderer.h	/^    FillMode_fill, FillMode_line,$/;"	e	enum:FillMode
GFX_H	src/gfx/gfx.h	/^#define GFX_H$/;"	d
GLFW_INCLUDE_NONE	src/gfx/gfx.h	/^#define GLFW_INCLUDE_NONE$/;"	d
GLMS_IVEC2_ONE	src/util/ivec2s.h	/^#define GLMS_IVEC2_ONE /;"	d
GLMS_IVEC2_ONE_INIT	src/util/ivec2s.h	/^#define GLMS_IVEC2_ONE_INIT /;"	d
GLMS_IVEC2_ZERO	src/util/ivec2s.h	/^#define GLMS_IVEC2_ZERO /;"	d
GLMS_IVEC2_ZERO_INIT	src/util/ivec2s.h	/^#define GLMS_IVEC2_ZERO_INIT /;"	d
GLMS_IVEC3S_XUP	src/util/ivec3s.h	/^#define GLMS_IVEC3S_XUP /;"	d
GLMS_IVEC3S_YUP	src/util/ivec3s.h	/^#define GLMS_IVEC3S_YUP /;"	d
GLMS_IVEC3S_ZUP	src/util/ivec3s.h	/^#define GLMS_IVEC3S_ZUP /;"	d
GLMS_IVEC3_ONE	src/util/ivec3s.h	/^#define GLMS_IVEC3_ONE /;"	d
GLMS_IVEC3_ONE_INIT	src/util/ivec3s.h	/^#define GLMS_IVEC3_ONE_INIT /;"	d
GLMS_IVEC3_ZERO	src/util/ivec3s.h	/^#define GLMS_IVEC3_ZERO /;"	d
GLMS_IVEC3_ZERO_INIT	src/util/ivec3s.h	/^#define GLMS_IVEC3_ZERO_INIT /;"	d
GLM_IVEC2_ONE	src/util/ivec2.h	/^#define GLM_IVEC2_ONE /;"	d
GLM_IVEC2_ONE_INIT	src/util/ivec2.h	/^#define GLM_IVEC2_ONE_INIT /;"	d
GLM_IVEC2_ZERO	src/util/ivec2.h	/^#define GLM_IVEC2_ZERO /;"	d
GLM_IVEC2_ZERO_INIT	src/util/ivec2.h	/^#define GLM_IVEC2_ZERO_INIT /;"	d
GLM_IVEC3_FORWARD	src/util/ivec3.h	/^#define GLM_IVEC3_FORWARD /;"	d
GLM_IVEC3_ONE	src/util/ivec3.h	/^#define GLM_IVEC3_ONE /;"	d
GLM_IVEC3_ONE_INIT	src/util/ivec3.h	/^#define GLM_IVEC3_ONE_INIT /;"	d
GLM_IVEC3_XUP	src/util/ivec3.h	/^#define GLM_IVEC3_XUP /;"	d
GLM_IVEC3_XXX	src/util/ivec3.h	/^#define GLM_IVEC3_XXX /;"	d
GLM_IVEC3_YUP	src/util/ivec3.h	/^#define GLM_IVEC3_YUP /;"	d
GLM_IVEC3_YYY	src/util/ivec3.h	/^#define GLM_IVEC3_YYY /;"	d
GLM_IVEC3_ZERO	src/util/ivec3.h	/^#define GLM_IVEC3_ZERO /;"	d
GLM_IVEC3_ZERO_INIT	src/util/ivec3.h	/^#define GLM_IVEC3_ZERO_INIT /;"	d
GLM_IVEC3_ZUP	src/util/ivec3.h	/^#define GLM_IVEC3_ZUP /;"	d
GLM_IVEC3_ZYX	src/util/ivec3.h	/^#define GLM_IVEC3_ZYX /;"	d
GLM_IVEC3_ZZZ	src/util/ivec3.h	/^#define GLM_IVEC3_ZZZ /;"	d
GRAPH_DATA_FILEPATH	src/graphs/graph.c	/^#define GRAPH_DATA_FILEPATH /;"	d	file:
GRAPH_H	src/graphs/graph.h	/^#define GRAPH_H$/;"	d
Graph	src/graphs/graph.h	/^struct Graph {$/;"	s
GraphState	src/graphs/graph.h	/^enum GraphState {$/;"	g
GraphState_MAX	src/graphs/graph.h	/^    GraphState_MAX,$/;"	e	enum:GraphState
GraphState_bezier	src/graphs/graph.h	/^    GraphState_bezier,$/;"	e	enum:GraphState
GraphState_cubic	src/graphs/graph.h	/^    GraphState_cubic,  $/;"	e	enum:GraphState
GraphState_linear	src/graphs/graph.h	/^    GraphState_linear,$/;"	e	enum:GraphState
GraphState_quadratic	src/graphs/graph.h	/^    GraphState_quadratic,$/;"	e	enum:GraphState
INSERT	src/graphs/graph.h	/^#define INSERT(/;"	d
IVEC2S23	src/util/fmath.h	/^#define IVEC2S23(/;"	d
IVEC2S2V	src/util/fmath.h	/^#define IVEC2S2V(/;"	d
IVEC3S2V	src/util/fmath.h	/^#define IVEC3S2V(/;"	d
Keyboard	src/gfx/window.h	/^struct Keyboard {$/;"	s
LDFLAGS	Makefile	/^LDFLAGS = \/media\/terabyte\/lib\/glad\/src\/glad.o \/media\/terabyte\/lib\/freetype\/build\/lib/;"	m
LINEAR_DATA_FILEPATH	src/graphs/linear.c	/^#define LINEAR_DATA_FILEPATH /;"	d	file:
LINEAR_GRAPH_H	src/graphs/linear.h	/^#define LINEAR_GRAPH_H$/;"	d
LINE_STEP	src/graphs/bezier.h	/^#define LINE_STEP /;"	d
LINE_STEP	src/graphs/quadratic.h	/^#define LINE_STEP /;"	d
Linear	src/graphs/linear.h	/^struct Linear {$/;"	s
LinearGraph	src/graphs/linear.h	/^struct LinearGraph {$/;"	s
MAX_BEZIER_GRAPHS	src/graphs/bezier.c	/^#define MAX_BEZIER_GRAPHS /;"	d	file:
MAX_CUBIC_GRAPHS	src/graphs/cubic.c	/^#define MAX_CUBIC_GRAPHS /;"	d	file:
MAX_ELEMENT_BUFFER	src/ui/ui.c	/^#define MAX_ELEMENT_BUFFER /;"	d	file:
MAX_GRAPH_COUNT	src/graphs/graph.h	/^#define MAX_GRAPH_COUNT /;"	d
MAX_INDEX_COUNT	src/graphs/graph.h	/^#define MAX_INDEX_COUNT /;"	d
MAX_LINEAR_GRAPHS	src/graphs/linear.c	/^#define MAX_LINEAR_GRAPHS /;"	d	file:
MAX_LINES_PER_GRAPH	src/graphs/graph.h	/^#define MAX_LINES_PER_GRAPH /;"	d
MAX_LINE_COUNT	src/graphs/graph.h	/^#define MAX_LINE_COUNT /;"	d
MAX_QUADRATIC_GRAPHS	src/graphs/quadratic.c	/^#define MAX_QUADRATIC_GRAPHS /;"	d	file:
MAX_VERTEX_BUFFER	src/ui/ui.c	/^#define MAX_VERTEX_BUFFER /;"	d	file:
MAX_VERTEX_COUNT	src/graphs/graph.h	/^#define MAX_VERTEX_COUNT /;"	d
MIMode	.vscode/launch.json	/^            "MIMode": "lldb",$/;"	s	object:configurations.2
MIMode	.vscode/launch.json	/^            "MIMode": "lldb",$/;"	s	object:configurations.5
MINIMUM_STEP	src/graphs/bezier.h	/^#define MINIMUM_STEP /;"	d
MINIMUM_STEP	src/graphs/quadratic.h	/^#define MINIMUM_STEP /;"	d
Math Visualiser Revised	README.md	/^# Math Visualiser Revised$/;"	c
Mouse	src/gfx/window.h	/^struct Mouse {$/;"	s
NOW	src/util/time.h	/^#define NOW(/;"	d
NS_PER_MS	src/util/time.h	/^#define NS_PER_MS /;"	d
NS_PER_SECOND	src/util/time.h	/^#define NS_PER_SECOND /;"	d
OBJ	Makefile	/^OBJ  = $(SRC:.c=.o)$/;"	m
OrthoCamera	src/util/camera.h	/^struct OrthoCamera$/;"	s
PACKED	src/util/util.h	/^#define PACKED /;"	d
PI	src/util/fmath.h	/^#define PI /;"	d
PI_2	src/util/fmath.h	/^#define PI_2 /;"	d
POINT_SIZE	src/graphs/bezier.h	/^#define POINT_SIZE /;"	d
POINT_SIZE	src/graphs/quadratic.h	/^#define POINT_SIZE /;"	d
PerspectiveCamera	src/util/camera.h	/^struct PerspectiveCamera$/;"	s
QUADRATIC_DATA_FILEPATH	src/graphs/quadratic.c	/^#define QUADRATIC_DATA_FILEPATH /;"	d	file:
QUADRATIC_GRAPH_H	src/graphs/quadratic.h	/^#define QUADRATIC_GRAPH_H$/;"	d
Quadratic	src/graphs/quadratic.h	/^struct Quadratic {$/;"	s
QuadraticGraph	src/graphs/quadratic.h	/^struct QuadraticGraph {$/;"	s
REMOVE_ARR	src/graphs/graph.h	/^#define REMOVE_ARR(/;"	d
RENDERER_H	src/gfx/renderer.h	/^#define RENDERER_H$/;"	d
RGBAX2F	src/util/color.h	/^#define RGBAX2F(/;"	d
RenderPass	src/gfx/renderer.h	/^enum RenderPass {$/;"	g
RenderPass_2d	src/gfx/renderer.h	/^    RenderPass_2d,$/;"	e	enum:RenderPass
RenderPass_3d	src/gfx/renderer.h	/^    RenderPass_3d,$/;"	e	enum:RenderPass
Renderer	src/gfx/renderer.h	/^struct Renderer {$/;"	s
SCREEN_HEIGHT	src/util/defines.h	/^#define SCREEN_HEIGHT /;"	d
SCREEN_WIDTH	src/util/defines.h	/^#define SCREEN_WIDTH /;"	d
SHADER_H	src/gfx/shader.h	/^#define SHADER_H$/;"	d
SRC	Makefile	/^SRC  = $(wildcard src\/**\/*.c) $(wildcard src\/*.c) $(wildcard src\/**\/**\/*.c) $(wildcard src/;"	m
STATE_H	src/state.h	/^#define STATE_H$/;"	d
STB_IMAGE_IMPLEMENTATION	src/gfx/texture.c	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
Shader	src/gfx/shader.h	/^struct Shader {$/;"	s
ShaderType	src/gfx/renderer.h	/^enum ShaderType {$/;"	g
ShaderType_MAX	src/gfx/renderer.h	/^    ShaderType_MAX,$/;"	e	enum:ShaderType
ShaderType_basic_color	src/gfx/renderer.h	/^    ShaderType_basic_color,$/;"	e	enum:ShaderType
ShaderType_basic_texture	src/gfx/renderer.h	/^    ShaderType_basic_texture,$/;"	e	enum:ShaderType
ShaderType_none	src/gfx/renderer.h	/^    ShaderType_none,$/;"	e	enum:ShaderType
ShaderType_text	src/gfx/renderer.h	/^    ShaderType_text,$/;"	e	enum:ShaderType
State	src/state.h	/^struct State {$/;"	s
TAU	src/util/fmath.h	/^#define TAU /;"	d
TEXTURE_H	src/gfx/texture.h	/^#define TEXTURE_H$/;"	d
TICKRATE	src/util/util.h	/^#define TICKRATE /;"	d
TIME_H	src/util/time.h	/^#define TIME_H$/;"	d
TRUE	src/util/defines.h	/^#define TRUE /;"	d
Texture	src/gfx/texture.h	/^struct Texture {$/;"	s
Textures	src/gfx/renderer.h	/^enum Textures {$/;"	g
Textures_MAX	src/gfx/renderer.h	/^    Textures_MAX,$/;"	e	enum:Textures
UI	src/ui/ui.h	/^struct UI$/;"	s
UI_H	src/ui/ui.h	/^#define UI_H$/;"	d
UTIL_H	src/util/util.h	/^#define UTIL_H$/;"	d
VAO	src/gfx/vao.h	/^struct VAO$/;"	s
VAO_H	src/gfx/vao.h	/^#define VAO_H$/;"	d
VBO	src/gfx/vbo.h	/^struct VBO$/;"	s
VBO_H	src/gfx/vbo.h	/^#define VBO_H$/;"	d
VEC2S2I	src/util/fmath.h	/^#define VEC2S2I(/;"	d
VEC3S2I	src/util/fmath.h	/^#define VEC3S2I(/;"	d
VMATH_H	src/util/vmath.h	/^#define VMATH_H$/;"	d
VertexAttr	src/gfx/shader.h	/^struct VertexAttr {$/;"	s
ViewProj	src/util/camera.h	/^struct ViewProj$/;"	s
WINDOW_H	src/gfx/window.h	/^#define WINDOW_H$/;"	d
Window	src/gfx/window.h	/^struct Window {$/;"	s
__anon9acfc83d0108	src/gfx/renderer.h	/^    struct {$/;"	s	struct:Renderer
__anon9acfc83d0208	src/gfx/renderer.h	/^    struct {$/;"	s	struct:Renderer
__anon9acfc83d0308	src/gfx/renderer.h	/^    struct {$/;"	s	struct:Renderer
_compile	src/gfx/shader.c	/^static GLint _compile(char *path, GLenum type) {$/;"	f	typeref:typename:GLint	file:
_cursor_callback	src/gfx/window.c	/^static void _cursor_callback(GLFWwindow *handle, double xp, double yp) {$/;"	f	typeref:typename:void	file:
_destroy	src/gfx/window.c	/^static void _destroy() {$/;"	f	typeref:typename:void	file:
_error_callback	src/gfx/window.c	/^static void _error_callback(int code, const char *description) {$/;"	f	typeref:typename:void	file:
_init	src/gfx/window.c	/^static void _init() { window.init(); }$/;"	f	typeref:typename:void	file:
_key_callback	src/gfx/window.c	/^static void _key_callback(GLFWwindow *handle, int key, int scancode, int action,$/;"	f	typeref:typename:void	file:
_log_and_fail	src/gfx/shader.c	/^static void _log_and_fail(GLint handle, const char *adverb, const char *path,$/;"	f	typeref:typename:void	file:
_mouse_callback	src/gfx/window.c	/^static void _mouse_callback(GLFWwindow *handle, int button, int action,$/;"	f	typeref:typename:void	file:
_render	src/gfx/window.c	/^static void _render() {$/;"	f	typeref:typename:void	file:
_size_callback	src/gfx/window.c	/^static void _size_callback(GLFWwindow *handle, int width, int height) {$/;"	f	typeref:typename:void	file:
_tick	src/gfx/window.c	/^static void _tick() {$/;"	f	typeref:typename:void	file:
_update	src/gfx/window.c	/^static void _update() {$/;"	f	typeref:typename:void	file:
a	src/graphs/cubic.h	/^    f32 a, h, k;$/;"	m	struct:CubicGraph	typeref:typename:f32
a	src/graphs/quadratic.h	/^    f32 a, h, k;$/;"	m	struct:QuadraticGraph	typeref:typename:f32
advance	src/gfx/renderer.h	/^    u32 advance;$/;"	m	struct:Character	typeref:typename:u32
all	Makefile	/^all: dirs game$/;"	t
allow_move_this_frame	src/graphs/bezier.h	/^    b8 allow_move_this_frame;$/;"	m	struct:Bezier	typeref:typename:b8
allow_move_this_frame	src/graphs/cubic.h	/^    b8 allow_move_this_frame;$/;"	m	struct:Cubic	typeref:typename:b8
allow_move_this_frame	src/graphs/linear.h	/^    b8 allow_move_this_frame;$/;"	m	struct:Linear	typeref:typename:b8
allow_move_this_frame	src/graphs/quadratic.h	/^    b8 allow_move_this_frame;$/;"	m	struct:Quadratic	typeref:typename:b8
args	.vscode/launch.json	/^            "args": [],$/;"	a	object:configurations.0
args	.vscode/launch.json	/^            "args": [],$/;"	a	object:configurations.1
args	.vscode/launch.json	/^            "args": [],$/;"	a	object:configurations.2
args	.vscode/launch.json	/^            "args": [],$/;"	a	object:configurations.3
args	.vscode/launch.json	/^            "args": [],$/;"	a	object:configurations.4
args	.vscode/launch.json	/^            "args": [],$/;"	a	object:configurations.5
array	src/gfx/renderer.h	/^        enum CameraType array[CAMERA_STACK_MAX];$/;"	m	struct:Renderer::__anon9acfc83d0108	typeref:enum:CameraType[]
aspect	src/util/camera.h	/^    f32 pitch, yaw, fov, aspect, znear, zfar;$/;"	m	struct:PerspectiveCamera	typeref:typename:f32
b	src/graphs/linear.h	/^    f32 m, b;$/;"	m	struct:LinearGraph	typeref:typename:f32
b32	src/util/defines.h	/^typedef uint32_t b32;$/;"	t	typeref:typename:uint32_t
b8	src/util/defines.h	/^typedef uint8_t b8;$/;"	t	typeref:typename:uint8_t
bearing	src/gfx/renderer.h	/^    ivec2s bearing;$/;"	m	struct:Character	typeref:typename:ivec2s
bezier	src/graphs/graph.h	/^    struct Bezier *bezier;$/;"	m	struct:Graph	typeref:struct:Bezier *
bezier4	src/util/vmath.h	/^#define bezier4(/;"	d
bezier_deserialize	src/graphs/bezier.c	/^static inline void bezier_deserialize(struct Bezier *self) {$/;"	f	typeref:typename:void	file:
bezier_destroy	src/graphs/bezier.c	/^void bezier_destroy(struct Bezier *self) {$/;"	f	typeref:typename:void
bezier_graph_mesh	src/graphs/bezier.c	/^static inline void bezier_graph_mesh(struct BezierGraph *self,$/;"	f	typeref:typename:void	file:
bezier_graph_update	src/graphs/bezier.c	/^static inline void bezier_graph_update(struct BezierGraph *self,$/;"	f	typeref:typename:void	file:
bezier_init	src/graphs/bezier.c	/^struct Bezier *bezier_init(struct Graph *graph) {$/;"	f	typeref:struct:Bezier *
bezier_mesh	src/graphs/bezier.c	/^void bezier_mesh(struct Bezier *self) {$/;"	f	typeref:typename:void
bezier_serialize	src/graphs/bezier.c	/^static inline void bezier_serialize(struct Bezier *self) {$/;"	f	typeref:typename:void	file:
bezier_state_change	src/graphs/bezier.c	/^void bezier_state_change(struct Bezier *self) {$/;"	f	typeref:typename:void
bezier_update	src/graphs/bezier.c	/^void bezier_update(struct Bezier *self) {$/;"	f	typeref:typename:void
button_array_tick	src/gfx/window.c	/^static void button_array_tick(u64 n, struct Button *buttons) {$/;"	f	typeref:typename:void	file:
button_array_update	src/gfx/window.c	/^static void button_array_update(u64 n, struct Button *buttons) {$/;"	f	typeref:typename:void	file:
buttons	src/gfx/window.h	/^    struct Button buttons[GLFW_MOUSE_BUTTON_LAST];$/;"	m	struct:Mouse	typeref:struct:Button[]
camera_stack	src/gfx/renderer.h	/^    } camera_stack;$/;"	m	struct:Renderer	typeref:struct:Renderer::__anon9acfc83d0108
camera_type	src/gfx/renderer.h	/^    enum CameraType camera_type;$/;"	m	struct:Renderer	typeref:enum:CameraType
cglm_ivec2_h	src/util/ivec2.h	/^#define cglm_ivec2_h$/;"	d
cglm_ivec3_h	src/util/ivec3.h	/^#define cglm_ivec3_h$/;"	d
cglms_ivec2s_h	src/util/ivec2s.h	/^#define cglms_ivec2s_h$/;"	d
cglms_ivec3s_h	src/util/ivec3s.h	/^#define cglms_ivec3s_h$/;"	d
characters	src/gfx/renderer.h	/^    struct Character characters[128];$/;"	m	struct:Renderer	typeref:struct:Character[128]
clamp	src/util/fmath.h	/^#define clamp(/;"	d
clean	Makefile	/^clean:$/;"	t
clear_color	src/gfx/renderer.h	/^    vec4s clear_color;$/;"	m	struct:Renderer	typeref:typename:vec4s
color	src/graphs/bezier.h	/^    vec4s color;$/;"	m	struct:BezierGraph	typeref:typename:vec4s
command	.vscode/tasks.json	/^                "command": "${workspaceFolder}\/build-macos.sh"$/;"	s	object:tasks.0.osx
command	.vscode/tasks.json	/^                "command": "${workspaceFolder}\/build.bat"$/;"	s	object:tasks.0.windows
command	.vscode/tasks.json	/^                "command": "${workspaceFolder}\/build.sh"$/;"	s	object:tasks.0.linux
configurations	.vscode/launch.json	/^    "configurations": [$/;"	a
console	.vscode/launch.json	/^            "console":"integratedTerminal",$/;"	s	object:configurations.0
console	.vscode/launch.json	/^            "console":"integratedTerminal",$/;"	s	object:configurations.3
cosf	src/util/fmath.h	/^#define cosf(/;"	d
cubef	src/util/fmath.h	/^#define cubef(/;"	d
cubic	src/graphs/graph.h	/^    struct Cubic *cubic;$/;"	m	struct:Graph	typeref:struct:Cubic *
cubic_deserialize	src/graphs/cubic.c	/^static inline void cubic_deserialize(struct Cubic *self) {$/;"	f	typeref:typename:void	file:
cubic_destroy	src/graphs/cubic.c	/^void cubic_destroy(struct Cubic *self) {$/;"	f	typeref:typename:void
cubic_graph_mesh	src/graphs/cubic.c	/^static inline void cubic_graph_mesh(struct CubicGraph *self,$/;"	f	typeref:typename:void	file:
cubic_graph_update	src/graphs/cubic.c	/^static inline void cubic_graph_update(struct CubicGraph *self,$/;"	f	typeref:typename:void	file:
cubic_init	src/graphs/cubic.c	/^struct Cubic *cubic_init(struct Graph *graph) {$/;"	f	typeref:struct:Cubic *
cubic_mesh	src/graphs/cubic.c	/^void cubic_mesh(struct Cubic *self) {$/;"	f	typeref:typename:void
cubic_selected_graph_update	src/graphs/cubic.c	/^static inline void cubic_selected_graph_update(struct CubicGraph *self,$/;"	f	typeref:typename:void	file:
cubic_serialize	src/graphs/cubic.c	/^static inline void cubic_serialize(struct Cubic *self) {$/;"	f	typeref:typename:void	file:
cubic_state_change	src/graphs/cubic.c	/^void cubic_state_change(struct Cubic *self) {$/;"	f	typeref:typename:void
cubic_update	src/graphs/cubic.c	/^void cubic_update(struct Cubic *self) {$/;"	f	typeref:typename:void
current_shader	src/gfx/renderer.h	/^    enum ShaderType current_shader;$/;"	m	struct:Renderer	typeref:enum:ShaderType
cwd	.vscode/launch.json	/^            "cwd": "${workspaceFolder}\/",$/;"	s	object:configurations.0
cwd	.vscode/launch.json	/^            "cwd": "${workspaceFolder}\/bin\/",$/;"	s	object:configurations.1
cwd	.vscode/launch.json	/^            "cwd": "${workspaceFolder}\/bin\/",$/;"	s	object:configurations.2
cwd	.vscode/launch.json	/^            "cwd": "${workspaceFolder}\/bin\/",$/;"	s	object:configurations.3
cwd	.vscode/launch.json	/^            "cwd": "${workspaceFolder}\/bin\/",$/;"	s	object:configurations.4
cwd	.vscode/launch.json	/^            "cwd": "${workspaceFolder}\/bin\/",$/;"	s	object:configurations.5
cwd	.vscode/tasks.json	/^                "cwd": "${workspaceFolder}\/"$/;"	s	object:tasks.0.options
degrees	src/util/fmath.h	/^#define degrees(/;"	d
delta	src/gfx/window.h	/^    vec2s position, delta;$/;"	m	struct:Mouse	typeref:typename:vec2s
destroy	src/gfx/window.h	/^    FWindow init, destroy, tick, update, render, resized;$/;"	m	struct:Window	typeref:typename:FWindow
destroy	src/main.c	/^void destroy() {$/;"	f	typeref:typename:void
detail	.vscode/tasks.json	/^            "detail": "Task generated by Debugger."$/;"	s	object:tasks.0
direction	src/util/camera.h	/^    vec3s position, direction, up, right;$/;"	m	struct:PerspectiveCamera	typeref:typename:vec3s
dirs	Makefile	/^dirs:$/;"	t
down	src/gfx/window.h	/^    b8 down, last, last_tick, pressed, pressed_tick;$/;"	m	struct:Button	typeref:typename:b8
dynamic	src/gfx/vbo.h	/^    b8 dynamic;$/;"	m	struct:VBO	typeref:typename:b8
elements	src/graphs/bezier.h	/^    u32 elements;$/;"	m	struct:Bezier	typeref:typename:u32
elements	src/graphs/cubic.h	/^    u32 elements;$/;"	m	struct:Cubic	typeref:typename:u32
elements	src/graphs/linear.h	/^    u32 elements;$/;"	m	struct:Linear	typeref:typename:u32
elements	src/graphs/quadratic.h	/^    u32 elements;$/;"	m	struct:Quadratic	typeref:typename:u32
environment	.vscode/launch.json	/^            "environment": [],$/;"	a	object:configurations.0
environment	.vscode/launch.json	/^            "environment": [],$/;"	a	object:configurations.1
environment	.vscode/launch.json	/^            "environment": [],$/;"	a	object:configurations.2
environment	.vscode/launch.json	/^            "environment": [],$/;"	a	object:configurations.3
environment	.vscode/launch.json	/^            "environment": [],$/;"	a	object:configurations.4
environment	.vscode/launch.json	/^            "environment": [],$/;"	a	object:configurations.5
externalConsole	.vscode/launch.json	/^            "externalConsole": false,$/;"	b	object:configurations.2
externalConsole	.vscode/launch.json	/^            "externalConsole": false,$/;"	b	object:configurations.5
f32	src/util/defines.h	/^typedef float f32;$/;"	t	typeref:typename:float
f64	src/util/defines.h	/^typedef double f64;$/;"	t	typeref:typename:double
filesystem_change_dir	src/io/filesystem_linux.c	/^void filesystem_change_dir(char *path) {$/;"	f	typeref:typename:void
filesystem_change_dir	src/io/filesystem_win32.c	/^void filesystem_change_dir(char *path) {$/;"	f	typeref:typename:void
filesystem_create_dir	src/io/filesystem_linux.c	/^void filesystem_create_dir(char *path) {$/;"	f	typeref:typename:void
filesystem_create_dir	src/io/filesystem_win32.c	/^void filesystem_create_dir(char *path) {$/;"	f	typeref:typename:void
filesystem_dir_exists	src/io/filesystem_linux.c	/^b8 filesystem_dir_exists(char *path) {$/;"	f	typeref:typename:b8
filesystem_dir_exists	src/io/filesystem_win32.c	/^b8 filesystem_dir_exists(char *path) {$/;"	f	typeref:typename:b8
filesystem_file_exists	src/io/filesystem_linux.c	/^b8 filesystem_file_exists(char *path) {$/;"	f	typeref:typename:b8
filesystem_file_exists	src/io/filesystem_win32.c	/^b8 filesystem_file_exists(char *path) {$/;"	f	typeref:typename:b8
filesystem_get_dir	src/io/filesystem_linux.c	/^void filesystem_get_dir(char *dir, u32 length) {$/;"	f	typeref:typename:void
filesystem_get_dir	src/io/filesystem_win32.c	/^void filesystem_get_dir(char *dir, u32 length) {$/;"	f	typeref:typename:void
flags	src/gfx/renderer.h	/^    } flags;$/;"	m	struct:Renderer	typeref:struct:Renderer::__anon9acfc83d0308
floori	src/util/fmath.h	/^#define floori(/;"	d
fov	src/util/camera.h	/^    f32 pitch, yaw, fov, aspect, znear, zfar;$/;"	m	struct:PerspectiveCamera	typeref:typename:f32
fps	src/gfx/window.h	/^    u64 frames, fps, last_frame, frame_delta;$/;"	m	struct:Window	typeref:typename:u64
frame_delta	src/gfx/window.h	/^    u64 frames, fps, last_frame, frame_delta;$/;"	m	struct:Window	typeref:typename:u64
frames	src/gfx/window.h	/^    u64 frames, fps, last_frame, frame_delta;$/;"	m	struct:Window	typeref:typename:u64
fs_handle	src/gfx/shader.h	/^    GLuint handle, vs_handle, fs_handle;$/;"	m	struct:Shader	typeref:typename:GLuint
ft	src/gfx/renderer.h	/^    FT_Library ft;$/;"	m	struct:Renderer	typeref:typename:FT_Library
game	Makefile	/^game: $(OBJ)$/;"	t
glm_ivec2	src/util/ivec2.h	/^glm_ivec2(int * __restrict v, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_add	src/util/ivec2.h	/^glm_ivec2_add(ivec2 a, ivec2 b, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_adds	src/util/ivec2.h	/^glm_ivec2_adds(ivec2 v, int s, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_copy	src/util/ivec2.h	/^glm_ivec2_copy(ivec2 a, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_cross	src/util/ivec2.h	/^glm_ivec2_cross(ivec2 a, ivec2 b) {$/;"	f	typeref:typename:CGLM_INLINE int
glm_ivec2_div	src/util/ivec2.h	/^glm_ivec2_div(ivec2 a, ivec2 b, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_divs	src/util/ivec2.h	/^glm_ivec2_divs(ivec2 v, int s, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_dot	src/util/ivec2.h	/^glm_ivec2_dot(ivec2 a, ivec2 b) {$/;"	f	typeref:typename:CGLM_INLINE int
glm_ivec2_mod	src/util/ivec2.h	/^glm_ivec2_mod(ivec2 a, ivec2 b, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_mul	src/util/ivec2.h	/^glm_ivec2_mul(ivec2 a, ivec2 b, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_one	src/util/ivec2.h	/^glm_ivec2_one(ivec2 v) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_print	src/util/ivec2.h	/^glm_ivec2_print(ivec2            vec,$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_scale	src/util/ivec2.h	/^glm_ivec2_scale(ivec2 v, int s, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_sub	src/util/ivec2.h	/^glm_ivec2_sub(ivec2 a, ivec2 b, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_subs	src/util/ivec2.h	/^glm_ivec2_subs(ivec2 v, int s, ivec2 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec2_zero	src/util/ivec2.h	/^glm_ivec2_zero(ivec2 v) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3	src/util/ivec3.h	/^glm_ivec3(vec4 v4, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_add	src/util/ivec3.h	/^glm_ivec3_add(ivec3 a, ivec3 b, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_adds	src/util/ivec3.h	/^glm_ivec3_adds(ivec3 v, int s, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_copy	src/util/ivec3.h	/^glm_ivec3_copy(ivec3 a, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_div	src/util/ivec3.h	/^glm_ivec3_div(ivec3 a, ivec3 b, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_divs	src/util/ivec3.h	/^glm_ivec3_divs(ivec3 v, int s, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_dot	src/util/ivec3.h	/^glm_ivec3_dot(ivec3 a, ivec3 b) {$/;"	f	typeref:typename:CGLM_INLINE int
glm_ivec3_dup	src/util/ivec3.h	/^#define glm_ivec3_dup(/;"	d
glm_ivec3_flipsign	src/util/ivec3.h	/^#define glm_ivec3_flipsign(/;"	d
glm_ivec3_flipsign_to	src/util/ivec3.h	/^#define glm_ivec3_flipsign_to(/;"	d
glm_ivec3_inv	src/util/ivec3.h	/^#define glm_ivec3_inv(/;"	d
glm_ivec3_inv_to	src/util/ivec3.h	/^#define glm_ivec3_inv_to(/;"	d
glm_ivec3_mod	src/util/ivec3.h	/^glm_ivec3_mod(ivec3 a, ivec3 b, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_mul	src/util/ivec3.h	/^glm_ivec3_mul(ivec3 a, ivec3 b, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_mulv	src/util/ivec3.h	/^#define glm_ivec3_mulv(/;"	d
glm_ivec3_norm	src/util/ivec3.h	/^glm_ivec3_norm(ivec3 v) {$/;"	f	typeref:typename:CGLM_INLINE int
glm_ivec3_norm2	src/util/ivec3.h	/^glm_ivec3_norm2(ivec3 v) {$/;"	f	typeref:typename:CGLM_INLINE int
glm_ivec3_one	src/util/ivec3.h	/^glm_ivec3_one(ivec3 v) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_scale	src/util/ivec3.h	/^glm_ivec3_scale(ivec3 v, int s, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_sub	src/util/ivec3.h	/^glm_ivec3_sub(ivec3 a, ivec3 b, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_subs	src/util/ivec3.h	/^glm_ivec3_subs(ivec3 v, int s, ivec3 dest) {$/;"	f	typeref:typename:CGLM_INLINE void
glm_ivec3_zero	src/util/ivec3.h	/^glm_ivec3_zero(ivec3 v) {$/;"	f	typeref:typename:CGLM_INLINE void
glms_aabb_scale	src/util/aabb.h	/^static inline void glms_aabb_scale(AABB box, vec3s scale, AABB dest) {$/;"	f	typeref:typename:void
glms_ivec2_add	src/util/ivec2s.h	/^glms_ivec2_add(ivec2s a, ivec2s b) {$/;"	f	typeref:typename:CGLM_INLINE ivec2s
glms_ivec2_adds	src/util/ivec2s.h	/^glms_ivec2_adds(ivec2s a, int s) {$/;"	f	typeref:typename:CGLM_INLINE ivec2s
glms_ivec2_mul	src/util/ivec2s.h	/^glms_ivec2_mul(ivec2s a, ivec2s b) {$/;"	f	typeref:typename:CGLM_INLINE ivec2s
glms_ivec2_one	src/util/ivec2s.h	/^glms_ivec2_one(void) {$/;"	f	typeref:typename:CGLM_INLINE ivec2s
glms_ivec2_pack	src/util/ivec2s.h	/^glms_ivec2_pack(ivec2s dst[], ivec2 src[], size_t len) {$/;"	f	typeref:typename:CGLM_INLINE void
glms_ivec2_scale	src/util/ivec2s.h	/^glms_ivec2_scale(ivec2s v, int s) {$/;"	f	typeref:typename:CGLM_INLINE ivec2s
glms_ivec2_sub	src/util/ivec2s.h	/^glms_ivec2_sub(ivec2s a, ivec2s b) {$/;"	f	typeref:typename:CGLM_INLINE ivec2s
glms_ivec2_subs	src/util/ivec2s.h	/^glms_ivec2_subs(ivec2s a, int s) {$/;"	f	typeref:typename:CGLM_INLINE ivec2s
glms_ivec2_unpack	src/util/ivec2s.h	/^glms_ivec2_unpack(ivec2 dst[], ivec2s src[], size_t len) {$/;"	f	typeref:typename:CGLM_INLINE void
glms_ivec2_zero	src/util/ivec2s.h	/^glms_ivec2_zero(void) {$/;"	f	typeref:typename:CGLM_INLINE ivec2s
glms_ivec3_add	src/util/ivec3s.h	/^glms_ivec3_add(ivec3s a, ivec3s b) {$/;"	f	typeref:typename:CGLM_INLINE ivec3s
glms_ivec3_adds	src/util/ivec3s.h	/^glms_ivec3_adds(ivec3s a, int s) {$/;"	f	typeref:typename:CGLM_INLINE ivec3s
glms_ivec3_mul	src/util/ivec3s.h	/^glms_ivec3_mul(ivec3s a, ivec3s b) {$/;"	f	typeref:typename:CGLM_INLINE ivec3s
glms_ivec3_one	src/util/ivec3s.h	/^glms_ivec3_one(void) {$/;"	f	typeref:typename:CGLM_INLINE ivec3s
glms_ivec3_pack	src/util/ivec3s.h	/^glms_ivec3_pack(ivec3s dst[], ivec3 src[], size_t len) {$/;"	f	typeref:typename:CGLM_INLINE void
glms_ivec3_scale	src/util/ivec3s.h	/^glms_ivec3_scale(ivec3s v, int s) {$/;"	f	typeref:typename:CGLM_INLINE ivec3s
glms_ivec3_sub	src/util/ivec3s.h	/^glms_ivec3_sub(ivec3s a, ivec3s b) {$/;"	f	typeref:typename:CGLM_INLINE ivec3s
glms_ivec3_subs	src/util/ivec3s.h	/^glms_ivec3_subs(ivec3s a, int s) {$/;"	f	typeref:typename:CGLM_INLINE ivec3s
glms_ivec3_unpack	src/util/ivec3s.h	/^glms_ivec3_unpack(ivec3 dst[], ivec3s src[], size_t len) {$/;"	f	typeref:typename:CGLM_INLINE void
glms_ivec3_zero	src/util/ivec3s.h	/^glms_ivec3_zero(void) {$/;"	f	typeref:typename:CGLM_INLINE ivec3s
glms_vec2_eqve	src/util/vmath.h	/^static inline b8 glms_vec2_eqve(vec2s v0, vec2s v1, f32 e) {$/;"	f	typeref:typename:b8
graph	src/graphs/bezier.h	/^    struct Graph *graph;$/;"	m	struct:Bezier	typeref:struct:Graph *
graph	src/graphs/cubic.h	/^    struct Graph *graph;$/;"	m	struct:Cubic	typeref:struct:Graph *
graph	src/graphs/linear.h	/^    struct Graph *graph;$/;"	m	struct:Linear	typeref:struct:Graph *
graph	src/graphs/quadratic.h	/^    struct Graph *graph;$/;"	m	struct:Quadratic	typeref:struct:Graph *
graph	src/state.h	/^    struct Graph graph;$/;"	m	struct:State	typeref:struct:Graph
graph	src/ui/ui.h	/^    struct Graph *graph;$/;"	m	struct:UI	typeref:struct:Graph *
graph_deserialize	src/graphs/graph.c	/^static inline void graph_deserialize(struct Graph *self) {$/;"	f	typeref:typename:void	file:
graph_destroy	src/graphs/graph.c	/^void graph_destroy(struct Graph *self) {$/;"	f	typeref:typename:void
graph_handle_inputs	src/graphs/graph.c	/^static inline void graph_handle_inputs(struct Graph *self) {$/;"	f	typeref:typename:void	file:
graph_init	src/graphs/graph.c	/^void graph_init(struct Graph *self) {$/;"	f	typeref:typename:void
graph_mesh_prepare	src/graphs/graph.c	/^void graph_mesh_prepare(struct Graph *self) {$/;"	f	typeref:typename:void
graph_render	src/graphs/graph.c	/^void graph_render(struct Graph *self) {$/;"	f	typeref:typename:void
graph_resized	src/graphs/graph.c	/^void graph_resized(struct Graph *self) { self->mesh_change_this_frame = true; }$/;"	f	typeref:typename:void
graph_serialize	src/graphs/graph.c	/^static inline void graph_serialize(struct Graph *self) {$/;"	f	typeref:typename:void	file:
graph_update	src/graphs/graph.c	/^void graph_update(struct Graph *self) {$/;"	f	typeref:typename:void
graphs	src/graphs/bezier.h	/^    struct BezierGraph *graphs;$/;"	m	struct:Bezier	typeref:struct:BezierGraph *
graphs	src/graphs/cubic.h	/^    struct CubicGraph *graphs;$/;"	m	struct:Cubic	typeref:struct:CubicGraph *
graphs	src/graphs/linear.h	/^    struct LinearGraph *graphs;$/;"	m	struct:Linear	typeref:struct:LinearGraph *
graphs	src/graphs/quadratic.h	/^    struct QuadraticGraph *graphs;$/;"	m	struct:Quadratic	typeref:struct:QuadraticGraph *
group	.vscode/tasks.json	/^            "group": "build",$/;"	s	object:tasks.0
h	src/graphs/cubic.h	/^    f32 a, h, k;$/;"	m	struct:CubicGraph	typeref:typename:f32
h	src/graphs/quadratic.h	/^    f32 a, h, k;$/;"	m	struct:QuadraticGraph	typeref:typename:f32
handle	src/gfx/shader.h	/^    GLuint handle, vs_handle, fs_handle;$/;"	m	struct:Shader	typeref:typename:GLuint
handle	src/gfx/texture.h	/^    GLuint handle;$/;"	m	struct:Texture	typeref:typename:GLuint
handle	src/gfx/vao.h	/^    GLuint handle;$/;"	m	struct:VAO	typeref:typename:GLuint
handle	src/gfx/vbo.h	/^    GLuint handle;$/;"	m	struct:VBO	typeref:typename:GLuint
handle	src/gfx/window.h	/^    GLFWwindow *handle;$/;"	m	struct:Window	typeref:typename:GLFWwindow *
i16	src/util/defines.h	/^typedef int16_t i16;$/;"	t	typeref:typename:int16_t
i32	src/util/defines.h	/^typedef int32_t i32;$/;"	t	typeref:typename:int32_t
i64	src/util/defines.h	/^typedef int64_t i64;$/;"	t	typeref:typename:int64_t
i8	src/util/defines.h	/^typedef int8_t i8;$/;"	t	typeref:typename:int8_t
ibo	src/gfx/renderer.h	/^    struct VBO vbo, ibo;$/;"	m	struct:Renderer	typeref:struct:VBO
ibo	src/graphs/graph.h	/^    struct VBO vbo, ibo;$/;"	m	struct:Graph	typeref:struct:VBO
index	src/gfx/shader.h	/^    GLuint index;$/;"	m	struct:VertexAttr	typeref:typename:GLuint
index_count	src/graphs/graph.h	/^    u32 index_count;$/;"	m	struct:Graph	typeref:typename:u32
indices	src/graphs/graph.h	/^    u32 indices[MAX_INDEX_COUNT];$/;"	m	struct:Graph	typeref:typename:u32[]
init	src/gfx/window.h	/^    FWindow init, destroy, tick, update, render, resized;$/;"	m	struct:Window	typeref:typename:FWindow
init	src/main.c	/^void init() {$/;"	f	typeref:typename:void
ivec2	src/util/ivec2.h	/^typedef int ivec2[2];$/;"	t	typeref:typename:int[2]
k	src/graphs/cubic.h	/^    f32 a, h, k;$/;"	m	struct:CubicGraph	typeref:typename:f32
k	src/graphs/quadratic.h	/^    f32 a, h, k;$/;"	m	struct:QuadraticGraph	typeref:typename:f32
keyboard	src/gfx/window.h	/^    struct Keyboard keyboard;$/;"	m	struct:Window	typeref:struct:Keyboard
keys	src/gfx/window.h	/^    struct Button keys[GLFW_KEY_LAST];$/;"	m	struct:Keyboard	typeref:struct:Button[]
lab2rgb	src/util/color.c	/^vec3s lab2rgb(vec3s c) {$/;"	f	typeref:typename:vec3s
lab2xyz	src/util/color.c	/^vec3s lab2xyz(vec3s c) {$/;"	f	typeref:typename:vec3s
label	.vscode/tasks.json	/^            "label": "Build",$/;"	s	object:tasks.0
last	src/gfx/window.h	/^    b8 down, last, last_tick, pressed, pressed_tick;$/;"	m	struct:Button	typeref:typename:b8
last_frame	src/gfx/window.h	/^    u64 frames, fps, last_frame, frame_delta;$/;"	m	struct:Window	typeref:typename:u64
last_second	src/gfx/window.h	/^    u64 last_second;$/;"	m	struct:Window	typeref:typename:u64
last_tick	src/gfx/window.h	/^    b8 down, last, last_tick, pressed, pressed_tick;$/;"	m	struct:Button	typeref:typename:b8
lerpf	src/util/fmath.h	/^#define lerpf(/;"	d
linear	src/graphs/graph.h	/^    struct Linear *linear;$/;"	m	struct:Graph	typeref:struct:Linear *
linear_deserialize	src/graphs/linear.c	/^static inline void linear_deserialize(struct Linear *self) {$/;"	f	typeref:typename:void	file:
linear_destroy	src/graphs/linear.c	/^void linear_destroy(struct Linear *self) {$/;"	f	typeref:typename:void
linear_graph_mesh	src/graphs/linear.c	/^void linear_graph_mesh(struct LinearGraph *self, struct Linear *linear) {$/;"	f	typeref:typename:void
linear_graph_update	src/graphs/linear.c	/^static inline void linear_graph_update(struct LinearGraph *self, struct Linear *linear, u32 inde/;"	f	typeref:typename:void	file:
linear_init	src/graphs/linear.c	/^struct Linear *linear_init(struct Graph *graph) {$/;"	f	typeref:struct:Linear *
linear_mesh	src/graphs/linear.c	/^void linear_mesh(struct Linear *self) {$/;"	f	typeref:typename:void
linear_selected_graph_update	src/graphs/linear.c	/^static inline void linear_selected_graph_update(struct LinearGraph *self, struct Linear *linear)/;"	f	typeref:typename:void	file:
linear_serialize	src/graphs/linear.c	/^static inline void linear_serialize(struct Linear *self) {$/;"	f	typeref:typename:void	file:
linear_state_change	src/graphs/linear.c	/^void linear_state_change(struct Linear *self) {$/;"	f	typeref:typename:void
linear_update	src/graphs/linear.c	/^void linear_update(struct Linear *self) {$/;"	f	typeref:typename:void
linux	.vscode/tasks.json	/^            "linux": {$/;"	o	object:tasks.0
m	src/graphs/linear.h	/^    f32 m, b;$/;"	m	struct:LinearGraph	typeref:typename:f32
m	src/util/ivec2.h	/^#define m /;"	d
main	src/main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
makefile.extensionOutputFolder	.vscode/settings.json	/^    "makefile.extensionOutputFolder": ".\/.vscode"$/;"	s
max	src/util/camera.h	/^    vec2s position, min, max;$/;"	m	struct:OrthoCamera	typeref:typename:vec2s
max	src/util/fmath.h	/^#define max(/;"	d
mesh_change_this_frame	src/graphs/graph.h	/^    b32 mesh_change_this_frame;$/;"	m	struct:Graph	typeref:typename:b32
min	src/util/camera.h	/^    vec2s position, min, max;$/;"	m	struct:OrthoCamera	typeref:typename:vec2s
min	src/util/fmath.h	/^#define min(/;"	d
mouse	src/gfx/window.h	/^    struct Mouse mouse;$/;"	m	struct:Window	typeref:struct:Mouse
mouse_get_grabbed	src/gfx/window.c	/^bool mouse_get_grabbed() {$/;"	f	typeref:typename:bool
mouse_set_grabbed	src/gfx/window.c	/^void mouse_set_grabbed(b8 grabbed) {$/;"	f	typeref:typename:void
name	.vscode/launch.json	/^            "name": "(Linux) Launch Unit Tests",$/;"	s	object:configurations.4
name	.vscode/launch.json	/^            "name": "(Linux) Launch",$/;"	s	object:configurations.1
name	.vscode/launch.json	/^            "name": "(Windows) Launch Unit Tests",$/;"	s	object:configurations.3
name	.vscode/launch.json	/^            "name": "(Windows) Launch",$/;"	s	object:configurations.0
name	.vscode/launch.json	/^            "name": "(macOS) Launch Unit Tests",$/;"	s	object:configurations.5
name	.vscode/launch.json	/^            "name": "(macOS) Launch",$/;"	s	object:configurations.2
name	src/gfx/shader.h	/^    const GLchar *name;$/;"	m	struct:VertexAttr	typeref:typename:const GLchar *
options	.vscode/tasks.json	/^            "options": {$/;"	o	object:tasks.0
ortho_camera	src/gfx/renderer.h	/^    struct OrthoCamera ortho_camera;$/;"	m	struct:Renderer	typeref:struct:OrthoCamera
ortho_camera_init	src/util/camera.c	/^void ortho_camera_init(struct OrthoCamera *self, vec2s min, vec2s max)$/;"	f	typeref:typename:void
ortho_camera_update	src/util/camera.c	/^void ortho_camera_update(struct OrthoCamera *self)$/;"	f	typeref:typename:void
osx	.vscode/tasks.json	/^            "osx": {$/;"	o	object:tasks.0
p	src/graphs/bezier.h	/^    vec2s p[4], pos;$/;"	m	struct:BezierGraph	typeref:typename:vec2s[4]
perspective_camera	src/gfx/renderer.h	/^    struct PerspectiveCamera perspective_camera;$/;"	m	struct:Renderer	typeref:struct:PerspectiveCamera
perspective_camera_init	src/util/camera.c	/^void perspective_camera_init(struct PerspectiveCamera *self, f32 fov)$/;"	f	typeref:typename:void
perspective_camera_update	src/util/camera.c	/^void perspective_camera_update(struct PerspectiveCamera *self)$/;"	f	typeref:typename:void
pitch	src/util/camera.h	/^    f32 pitch, yaw, fov, aspect, znear, zfar;$/;"	m	struct:PerspectiveCamera	typeref:typename:f32
pos	src/graphs/bezier.h	/^    vec2s p[4], pos;$/;"	m	struct:BezierGraph	typeref:typename:vec2s
pos	src/graphs/cubic.h	/^    vec2s pos;$/;"	m	struct:CubicGraph	typeref:typename:vec2s
pos	src/graphs/linear.h	/^    vec2s pos, target_pos;$/;"	m	struct:LinearGraph	typeref:typename:vec2s
pos	src/graphs/quadratic.h	/^    vec2s pos;$/;"	m	struct:QuadraticGraph	typeref:typename:vec2s
position	src/gfx/window.h	/^    vec2s position, delta;$/;"	m	struct:Mouse	typeref:typename:vec2s
position	src/util/camera.h	/^    vec2s position, min, max;$/;"	m	struct:OrthoCamera	typeref:typename:vec2s
position	src/util/camera.h	/^    vec3s position, direction, up, right;$/;"	m	struct:PerspectiveCamera	typeref:typename:vec3s
pressed	src/gfx/window.h	/^    b8 down, last, last_tick, pressed, pressed_tick;$/;"	m	struct:Button	typeref:typename:b8
pressed_tick	src/gfx/window.h	/^    b8 down, last, last_tick, pressed, pressed_tick;$/;"	m	struct:Button	typeref:typename:b8
problemMatcher	.vscode/tasks.json	/^            "problemMatcher": [$/;"	a	object:tasks.0
program	.vscode/launch.json	/^            "program": "${workspaceFolder}\/bin\/main.exe",$/;"	s	object:configurations.0
program	.vscode/launch.json	/^            "program": "${workspaceFolder}\/bin\/testbed",$/;"	s	object:configurations.1
program	.vscode/launch.json	/^            "program": "${workspaceFolder}\/bin\/testbed",$/;"	s	object:configurations.2
program	.vscode/launch.json	/^            "program": "${workspaceFolder}\/bin\/tests",$/;"	s	object:configurations.4
program	.vscode/launch.json	/^            "program": "${workspaceFolder}\/bin\/tests",$/;"	s	object:configurations.5
program	.vscode/launch.json	/^            "program": "${workspaceFolder}\/bin\/tests.exe",$/;"	s	object:configurations.3
proj	src/util/camera.h	/^    mat4s view, proj;$/;"	m	struct:ViewProj	typeref:typename:mat4s
quadratic	src/graphs/graph.h	/^    struct Quadratic *quadratic;$/;"	m	struct:Graph	typeref:struct:Quadratic *
quadratic_deserialize	src/graphs/quadratic.c	/^static inline void quadratic_deserialize(struct Quadratic *self) {$/;"	f	typeref:typename:void	file:
quadratic_destroy	src/graphs/quadratic.c	/^void quadratic_destroy(struct Quadratic *self) {$/;"	f	typeref:typename:void
quadratic_graph_mesh	src/graphs/quadratic.c	/^static inline void quadratic_graph_mesh(struct QuadraticGraph *self,$/;"	f	typeref:typename:void	file:
quadratic_graph_update	src/graphs/quadratic.c	/^static inline void quadratic_graph_update(struct QuadraticGraph *self,$/;"	f	typeref:typename:void	file:
quadratic_init	src/graphs/quadratic.c	/^struct Quadratic *quadratic_init(struct Graph *graph) {$/;"	f	typeref:struct:Quadratic *
quadratic_mesh	src/graphs/quadratic.c	/^void quadratic_mesh(struct Quadratic *self) {$/;"	f	typeref:typename:void
quadratic_selected_graph_update	src/graphs/quadratic.c	/^void quadratic_selected_graph_update(struct QuadraticGraph *self,$/;"	f	typeref:typename:void
quadratic_serialize	src/graphs/quadratic.c	/^static inline void quadratic_serialize(struct Quadratic *self) {$/;"	f	typeref:typename:void	file:
quadratic_state_change	src/graphs/quadratic.c	/^void quadratic_state_change(struct Quadratic *self) {$/;"	f	typeref:typename:void
quadratic_update	src/graphs/quadratic.c	/^void quadratic_update(struct Quadratic *self) {$/;"	f	typeref:typename:void
radians	src/util/fmath.h	/^#define radians(/;"	d
render	src/gfx/window.h	/^    FWindow init, destroy, tick, update, render, resized;$/;"	m	struct:Window	typeref:typename:FWindow
render	src/main.c	/^void render() {$/;"	f	typeref:typename:void
renderer	src/state.h	/^    struct Renderer renderer;$/;"	m	struct:State	typeref:struct:Renderer
renderer_aabb	src/gfx/renderer.c	/^void renderer_aabb(struct Renderer *self, AABB aabb, vec4s color, mat4s model,$/;"	f	typeref:typename:void
renderer_destroy	src/gfx/renderer.c	/^void renderer_destroy(struct Renderer *self) {$/;"	f	typeref:typename:void
renderer_init	src/gfx/renderer.c	/^void renderer_init(struct Renderer *self) {$/;"	f	typeref:typename:void
renderer_init_text	src/gfx/renderer.c	/^static inline void renderer_init_text(struct Renderer *self, char *font_path) {$/;"	f	typeref:typename:void	file:
renderer_load_faces	src/gfx/renderer.c	/^static inline void renderer_load_faces(struct Renderer *self, char *font_path) {$/;"	f	typeref:typename:void	file:
renderer_pop_camera	src/gfx/renderer.c	/^void renderer_pop_camera(struct Renderer *self) {$/;"	f	typeref:typename:void
renderer_prepare	src/gfx/renderer.c	/^void renderer_prepare(struct Renderer *self, enum RenderPass pass) {$/;"	f	typeref:typename:void
renderer_push_camera	src/gfx/renderer.c	/^void renderer_push_camera(struct Renderer *self) {$/;"	f	typeref:typename:void
renderer_quad_color	src/gfx/renderer.c	/^void renderer_quad_color(struct Renderer *self, vec2s size, vec4s color,$/;"	f	typeref:typename:void
renderer_quad_texture	src/gfx/renderer.c	/^void renderer_quad_texture(struct Renderer *self, struct Texture texture,$/;"	f	typeref:typename:void
renderer_set_camera	src/gfx/renderer.c	/^void renderer_set_camera(struct Renderer *self, enum CameraType type) {$/;"	f	typeref:typename:void
renderer_set_view_proj	src/gfx/renderer.c	/^void renderer_set_view_proj(struct Renderer *self) {$/;"	f	typeref:typename:void
renderer_text	src/gfx/renderer.c	/^void renderer_text(struct Renderer *self, char *text, u32 text_length,$/;"	f	typeref:typename:void
renderer_update	src/gfx/renderer.c	/^void renderer_update(struct Renderer *self) {}$/;"	f	typeref:typename:void
renderer_use_shader	src/gfx/renderer.c	/^void renderer_use_shader(struct Renderer *self, enum ShaderType shader) {$/;"	f	typeref:typename:void
request	.vscode/launch.json	/^            "request": "launch",$/;"	s	object:configurations.0
request	.vscode/launch.json	/^            "request": "launch",$/;"	s	object:configurations.1
request	.vscode/launch.json	/^            "request": "launch",$/;"	s	object:configurations.2
request	.vscode/launch.json	/^            "request": "launch",$/;"	s	object:configurations.3
request	.vscode/launch.json	/^            "request": "launch",$/;"	s	object:configurations.4
request	.vscode/launch.json	/^            "request": "launch",$/;"	s	object:configurations.5
resized	src/gfx/window.h	/^    FWindow init, destroy, tick, update, render, resized;$/;"	m	struct:Window	typeref:typename:FWindow
resized	src/main.c	/^void resized() { graph_resized(&state.graph); }$/;"	f	typeref:typename:void
resolution	src/graphs/bezier.h	/^    u32 resolution;$/;"	m	struct:Bezier	typeref:typename:u32
resolution	src/graphs/cubic.h	/^    u32 resolution;$/;"	m	struct:Cubic	typeref:typename:u32
resolution	src/graphs/quadratic.h	/^    u32 resolution;$/;"	m	struct:Quadratic	typeref:typename:u32
rgb2lab	src/util/color.c	/^vec3s rgb2lab(vec3s c) {$/;"	f	typeref:typename:vec3s
rgb2xyz	src/util/color.c	/^vec3s rgb2xyz(vec3s c) {$/;"	f	typeref:typename:vec3s
rgb_brighten	src/util/color.c	/^vec3s rgb_brighten(vec3s rgb, f32 d) {$/;"	f	typeref:typename:vec3s
rgba_brighten	src/util/color.c	/^vec4s rgba_brighten(vec4s rgba, f32 d) {$/;"	f	typeref:typename:vec4s
rgba_lerp	src/util/color.c	/^vec4s rgba_lerp(vec4s rgba_a, vec4s rgba_b, f32 t) {$/;"	f	typeref:typename:vec4s
rgba_lerp3	src/util/color.c	/^vec4s rgba_lerp3(vec4s rgba_a, vec4s rgba_b, vec4s rgba_c, f32 t) {$/;"	f	typeref:typename:vec4s
right	src/util/camera.h	/^    vec3s position, direction, up, right;$/;"	m	struct:PerspectiveCamera	typeref:typename:vec3s
run	Makefile	/^run: all$/;"	t
safe_expf	src/util/fmath.h	/^#define safe_expf(/;"	d
selected_graph_index	src/graphs/bezier.h	/^    u32 selected_graph_index; $/;"	m	struct:Bezier	typeref:typename:u32
selected_graph_index	src/graphs/cubic.h	/^    u32 selected_graph_index;$/;"	m	struct:Cubic	typeref:typename:u32
selected_graph_index	src/graphs/linear.h	/^    u32 selected_graph_index;$/;"	m	struct:Linear	typeref:typename:u32
selected_graph_index	src/graphs/quadratic.h	/^    u32 selected_graph_index; $/;"	m	struct:Quadratic	typeref:typename:u32
selected_graph_update	src/graphs/bezier.c	/^static inline void selected_graph_update(struct BezierGraph *self,$/;"	f	typeref:typename:void	file:
selected_point_index	src/graphs/bezier.h	/^    u32 selected_point_index;$/;"	m	struct:Bezier	typeref:typename:u32
shader	src/gfx/renderer.h	/^    struct Shader shader;$/;"	m	struct:Renderer	typeref:struct:Shader
shader_bind	src/gfx/shader.c	/^void shader_bind(struct Shader self) {$/;"	f	typeref:typename:void
shader_create	src/gfx/shader.c	/^struct Shader shader_create(char *vs_path, char *fs_path, u64 n, struct VertexAttr attributes[])/;"	f	typeref:struct:Shader
shader_destroy	src/gfx/shader.c	/^void shader_destroy(struct Shader self) {$/;"	f	typeref:typename:void
shader_uniform_float	src/gfx/shader.c	/^void shader_uniform_float(struct Shader self, char *name, f32 f) {$/;"	f	typeref:typename:void
shader_uniform_int	src/gfx/shader.c	/^void shader_uniform_int(struct Shader self, char *name, int v) {$/;"	f	typeref:typename:void
shader_uniform_mat4	src/gfx/shader.c	/^void shader_uniform_mat4(struct Shader self, char *name, mat4s m) {$/;"	f	typeref:typename:void
shader_uniform_texture2D	src/gfx/shader.c	/^void shader_uniform_texture2D(struct Shader self, char *name, struct Texture texture, GLuint n) /;"	f	typeref:typename:void
shader_uniform_uint	src/gfx/shader.c	/^void shader_uniform_uint(struct Shader self, char *name, unsigned int v) {$/;"	f	typeref:typename:void
shader_uniform_vec2	src/gfx/shader.c	/^void shader_uniform_vec2(struct Shader self, char *name, vec2s v) {$/;"	f	typeref:typename:void
shader_uniform_vec3	src/gfx/shader.c	/^void shader_uniform_vec3(struct Shader self, char *name, vec3s v) {$/;"	f	typeref:typename:void
shader_uniform_vec4	src/gfx/shader.c	/^void shader_uniform_vec4(struct Shader self, char *name, vec4s v) {$/;"	f	typeref:typename:void
shader_uniform_view_proj	src/gfx/shader.c	/^void shader_uniform_view_proj(struct Shader self, struct ViewProj view_proj) {$/;"	f	typeref:typename:void
shaders	src/gfx/renderer.h	/^    struct Shader shaders[ShaderType_MAX];$/;"	m	struct:Renderer	typeref:struct:Shader[]
sign	src/util/fmath.h	/^#define sign(/;"	d
sinf	src/util/fmath.h	/^#define sinf(/;"	d
size	src/gfx/renderer.h	/^        u64 size;$/;"	m	struct:Renderer::__anon9acfc83d0108	typeref:typename:u64
size	src/gfx/renderer.h	/^    ivec2s size;$/;"	m	struct:Character	typeref:typename:ivec2s
size	src/gfx/texture.h	/^    ivec2s size;$/;"	m	struct:Texture	typeref:typename:ivec2s
size	src/gfx/window.h	/^    ivec2s size;$/;"	m	struct:Window	typeref:typename:ivec2s
squaref	src/util/fmath.h	/^#define squaref(/;"	d
state	src/graphs/graph.h	/^    enum GraphState state;$/;"	m	struct:Graph	typeref:enum:GraphState
state	src/main.c	/^struct State state;$/;"	v	typeref:struct:State
stopAtEntry	.vscode/launch.json	/^            "stopAtEntry": false,$/;"	b	object:configurations.0
stopAtEntry	.vscode/launch.json	/^            "stopAtEntry": false,$/;"	b	object:configurations.1
stopAtEntry	.vscode/launch.json	/^            "stopAtEntry": false,$/;"	b	object:configurations.2
stopAtEntry	.vscode/launch.json	/^            "stopAtEntry": false,$/;"	b	object:configurations.3
stopAtEntry	.vscode/launch.json	/^            "stopAtEntry": false,$/;"	b	object:configurations.4
stopAtEntry	.vscode/launch.json	/^            "stopAtEntry": false,$/;"	b	object:configurations.5
target_pos	src/graphs/linear.h	/^    vec2s pos, target_pos;$/;"	m	struct:LinearGraph	typeref:typename:vec2s
tasks	.vscode/tasks.json	/^    "tasks": [$/;"	a
text	src/gfx/renderer.h	/^    } text;$/;"	m	struct:Renderer	typeref:struct:Renderer::__anon9acfc83d0208
texture	src/gfx/renderer.h	/^    struct Texture texture;$/;"	m	struct:Character	typeref:struct:Texture
texture_bind	src/gfx/texture.c	/^void texture_bind(struct Texture self) {$/;"	f	typeref:typename:void
texture_create_from_path	src/gfx/texture.c	/^struct Texture texture_create_from_path(char *path) {$/;"	f	typeref:struct:Texture
texture_create_from_pixels	src/gfx/texture.c	/^struct Texture texture_create_from_pixels(u8 *pixels, u64 width, u64 height,$/;"	f	typeref:struct:Texture
texture_destroy	src/gfx/texture.c	/^void texture_destroy(struct Texture self) { glDeleteTextures(1, &self.handle); }$/;"	f	typeref:typename:void
texture_load_pixels	src/gfx/texture.c	/^void texture_load_pixels(char *path, u8 **pixels_out, u64 *width_out,$/;"	f	typeref:typename:void
textures	src/gfx/renderer.h	/^    struct Texture textures[Textures_MAX];$/;"	m	struct:Renderer	typeref:struct:Texture[]
tick	src/gfx/window.h	/^    FWindow init, destroy, tick, update, render, resized;$/;"	m	struct:Window	typeref:typename:FWindow
tick	src/main.c	/^void tick() { state.ticks++; }$/;"	f	typeref:typename:void
tick_remainder	src/gfx/window.h	/^    u64 ticks, tps, tick_remainder;$/;"	m	struct:Window	typeref:typename:u64
ticks	src/gfx/window.h	/^    u64 ticks, tps, tick_remainder;$/;"	m	struct:Window	typeref:typename:u64
ticks	src/state.h	/^    u64 ticks;$/;"	m	struct:State	typeref:typename:u64
tps	src/gfx/window.h	/^    u64 ticks, tps, tick_remainder;$/;"	m	struct:Window	typeref:typename:u64
type	.vscode/launch.json	/^            "type": "cppdbg",$/;"	s	object:configurations.1
type	.vscode/launch.json	/^            "type": "cppdbg",$/;"	s	object:configurations.2
type	.vscode/launch.json	/^            "type": "cppdbg",$/;"	s	object:configurations.4
type	.vscode/launch.json	/^            "type": "cppdbg",$/;"	s	object:configurations.5
type	.vscode/launch.json	/^            "type": "cppvsdbg",$/;"	s	object:configurations.0
type	.vscode/launch.json	/^            "type": "cppvsdbg",$/;"	s	object:configurations.3
type	.vscode/tasks.json	/^            "type": "shell",$/;"	s	object:tasks.0
type	src/gfx/vbo.h	/^    GLint type;$/;"	m	struct:VBO	typeref:typename:GLint
u16	src/util/defines.h	/^typedef uint16_t u16;$/;"	t	typeref:typename:uint16_t
u32	src/util/defines.h	/^typedef uint32_t u32;$/;"	t	typeref:typename:uint32_t
u64	src/util/defines.h	/^typedef uint64_t u64;$/;"	t	typeref:typename:uint64_t
u8	src/util/defines.h	/^typedef uint8_t u8;$/;"	t	typeref:typename:uint8_t
ui	src/state.h	/^    struct UI ui;$/;"	m	struct:State	typeref:struct:UI
ui_destroy	src/ui/ui.c	/^void ui_destroy(struct UI *self) {}$/;"	f	typeref:typename:void
ui_init	src/ui/ui.c	/^void ui_init(struct UI *self, struct Graph *graph) { self->graph = graph; }$/;"	f	typeref:typename:void
ui_render	src/ui/ui.c	/^void ui_render(struct UI *self) {$/;"	f	typeref:typename:void
ui_render_bezier	src/ui/ui.c	/^static inline void ui_render_bezier(struct UI *self) {$/;"	f	typeref:typename:void	file:
ui_render_bezier_points	src/ui/ui.c	/^static inline void ui_render_bezier_points(struct UI *self) {$/;"	f	typeref:typename:void	file:
ui_render_cubic	src/ui/ui.c	/^static inline void ui_render_cubic(struct UI *self) {$/;"	f	typeref:typename:void	file:
ui_render_cubic_points	src/ui/ui.c	/^static inline void ui_render_cubic_points(struct UI *self) {$/;"	f	typeref:typename:void	file:
ui_render_label	src/ui/ui.c	/^static inline void ui_render_label(struct UI *self, char *name, vec2s position,$/;"	f	typeref:typename:void	file:
ui_render_linear	src/ui/ui.c	/^static inline void ui_render_linear(struct UI *self) {$/;"	f	typeref:typename:void	file:
ui_render_linear_points	src/ui/ui.c	/^static inline void ui_render_linear_points(struct UI *self) {$/;"	f	typeref:typename:void	file:
ui_render_quadratic	src/ui/ui.c	/^static inline void ui_render_quadratic(struct UI *self) {$/;"	f	typeref:typename:void	file:
ui_render_quadratic_points	src/ui/ui.c	/^static inline void ui_render_quadratic_points(struct UI *self) {$/;"	f	typeref:typename:void	file:
ui_render_slider	src/ui/ui.c	/^static inline void ui_render_slider(struct UI *self, vec2s position, f32 value,$/;"	f	typeref:typename:void	file:
ui_update	src/ui/ui.c	/^void ui_update(struct UI *self) {}$/;"	f	typeref:typename:void
up	src/util/camera.h	/^    vec3s position, direction, up, right;$/;"	m	struct:PerspectiveCamera	typeref:typename:vec3s
update	src/gfx/window.h	/^    FWindow init, destroy, tick, update, render, resized;$/;"	m	struct:Window	typeref:typename:FWindow
update	src/main.c	/^void update() {$/;"	f	typeref:typename:void
uv_unit	src/gfx/texture.h	/^    vec2s uv_unit;$/;"	m	struct:Texture	typeref:typename:vec2s
vao	src/gfx/renderer.h	/^        struct VAO vao;$/;"	m	struct:Renderer::__anon9acfc83d0208	typeref:struct:VAO
vao	src/gfx/renderer.h	/^    struct VAO vao;$/;"	m	struct:Renderer	typeref:struct:VAO
vao	src/graphs/graph.h	/^    struct VAO vao;$/;"	m	struct:Graph	typeref:struct:VAO
vao_attr	src/gfx/vao.c	/^void vao_attr(struct VAO self, struct VBO vbo, GLuint index, GLint size,$/;"	f	typeref:typename:void
vao_bind	src/gfx/vao.c	/^void vao_bind(struct VAO self) { glBindVertexArray(self.handle); }$/;"	f	typeref:typename:void
vao_create	src/gfx/vao.c	/^struct VAO vao_create() {$/;"	f	typeref:struct:VAO
vao_destroy	src/gfx/vao.c	/^void vao_destroy(struct VAO self) { glDeleteVertexArrays(1, &self.handle); }$/;"	f	typeref:typename:void
vbo	src/gfx/renderer.h	/^        struct VBO vbo;$/;"	m	struct:Renderer::__anon9acfc83d0208	typeref:struct:VBO
vbo	src/gfx/renderer.h	/^    struct VBO vbo, ibo;$/;"	m	struct:Renderer	typeref:struct:VBO
vbo	src/graphs/graph.h	/^    struct VBO vbo, ibo;$/;"	m	struct:Graph	typeref:struct:VBO
vbo_bind	src/gfx/vbo.c	/^void vbo_bind(struct VBO self) { glBindBuffer(self.type, self.handle); }$/;"	f	typeref:typename:void
vbo_buffer	src/gfx/vbo.c	/^void vbo_buffer(struct VBO self, void *data, u64 offset, u64 count) {$/;"	f	typeref:typename:void
vbo_create	src/gfx/vbo.c	/^struct VBO vbo_create(GLint type, b8 dynamic) {$/;"	f	typeref:struct:VBO
vbo_destroy	src/gfx/vbo.c	/^void vbo_destroy(struct VBO self) { glDeleteBuffers(1, &self.handle); }$/;"	f	typeref:typename:void
version	.vscode/tasks.json	/^    "version": "2.0.0"$/;"	s
vertex_count	src/graphs/graph.h	/^    u32 vertex_count;$/;"	m	struct:Graph	typeref:typename:u32
vertices	src/graphs/graph.h	/^    f32 vertices[MAX_VERTEX_COUNT];$/;"	m	struct:Graph	typeref:typename:f32[]
view	src/util/camera.h	/^    mat4s view, proj;$/;"	m	struct:ViewProj	typeref:typename:mat4s
view_proj	src/util/camera.h	/^    struct ViewProj view_proj;$/;"	m	struct:OrthoCamera	typeref:struct:ViewProj
view_proj	src/util/camera.h	/^    struct ViewProj view_proj;$/;"	m	struct:PerspectiveCamera	typeref:struct:ViewProj
vs_handle	src/gfx/shader.h	/^    GLuint handle, vs_handle, fs_handle;$/;"	m	struct:Shader	typeref:typename:GLuint
window	src/gfx/window.c	/^struct Window window;$/;"	v	typeref:struct:Window
window	src/state.h	/^    struct Window *window;$/;"	m	struct:State	typeref:struct:Window *
window_create	src/gfx/window.c	/^void window_create(FWindow init, FWindow destroy, FWindow tick, FWindow update,$/;"	f	typeref:typename:void
window_loop	src/gfx/window.c	/^void window_loop() {$/;"	f	typeref:typename:void
windows	.vscode/tasks.json	/^            "windows": {$/;"	o	object:tasks.0
wireframe	src/gfx/renderer.h	/^        b8 wireframe : 1;$/;"	m	struct:Renderer::__anon9acfc83d0308	typeref:typename:b8:1
xyz2lab	src/util/color.c	/^vec3s xyz2lab(vec3s c) {$/;"	f	typeref:typename:vec3s
xyz2rgb	src/util/color.c	/^vec3s xyz2rgb(vec3s c) {$/;"	f	typeref:typename:vec3s
yaw	src/util/camera.h	/^    f32 pitch, yaw, fov, aspect, znear, zfar;$/;"	m	struct:PerspectiveCamera	typeref:typename:f32
zfar	src/util/camera.h	/^    f32 pitch, yaw, fov, aspect, znear, zfar;$/;"	m	struct:PerspectiveCamera	typeref:typename:f32
znear	src/util/camera.h	/^    f32 pitch, yaw, fov, aspect, znear, zfar;$/;"	m	struct:PerspectiveCamera	typeref:typename:f32
